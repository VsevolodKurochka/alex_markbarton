=font($font)
	@if $font == 'pl'
		font-family: 'Proxima Nova Light'

	@elseif $font == 'pb'
		font-family: 'Proxima Nova Bold'

	@elseif $font == 'cb'
		font-family: 'Caveat Bold'

	@elseif $font == 'cr'
		font-family: 'Caveat Regular'

/// Get font-size from map
/// @access public
/// @param {String} $fs-map - font-size
/// @param {Map} $fs-breakpoints [$breakpoints] - font-size connected on breakpoints
/// @author Vsevolod Kurochka
=fs($fs-map, $fs-breakpoints: $breakpoints)
	$fs-map: map-get($sizes, $fs-map)

	@each $fs-breakpoint, $fs-font-size in $fs-map
		@if $fs-breakpoint == 'default'
			font-size: $fs-font-size
		@else
			$fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint)
			@media (min-width: $fs-breakpoint)
				font-size: $fs-font-size

/// Get font-size from map
/// @access public
/// @param {String} $fs-map - font-size
/// @param {Map} $fs-breakpoints [$breakpoints] - font-size connected on breakpoints
/// @author Vsevolod Kurochka
=fs-simple($fs-map, $fs-breakpoints: $breakpoints)

	@each $fs-breakpoint, $fs-font-size in $fs-map

		@if $fs-breakpoint == 'default'
			font-size: $fs-font-size

		@else
			$fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint)

			@media (min-width: $fs-breakpoint)
				
				font-size: $fs-font-size